// ORDERS TABLE QUERIES
export const CreteNewOrderSQL = `INSERT INTO orders (status, user_id) VALUES ($1, $2) RETURNING *`
export const GetAllOrdersSQL = `SELECT o.id AS id, u.first_name, o.user_id, JSON_AGG(JSONB_BUILD_OBJECT('product_id', p.id, 'title', p.title, 'description', p.description, 'price', p.price, 'quantity', op.quantity)) AS products, o.status AS status FROM orders AS o LEFT JOIN order_products AS op ON o.id = op.order_id LEFT JOIN products AS p ON op.product_id = p.id LEFT JOIN users AS u ON u.id = o.user_id GROUP BY o.id, u.first_name, o.status`
export const GetAllOrdersOfUserSQL = `SELECT o.id AS id, u.first_name, o.user_id, JSON_AGG(JSONB_BUILD_OBJECT('product_id', p.id, 'title', p.title, 'description', p.description, 'price', p.price, 'quantity', op.quantity)) AS products, o.status AS status FROM orders AS o LEFT JOIN order_products AS op ON o.id = op.order_id LEFT JOIN products AS p ON op.product_id = p.id LEFT JOIN users AS u ON u.id = o.user_id WHERE o.user_id = $1 GROUP BY o.id, u.first_name, o.status, o.user_id`
export const GetOrderByIDSQL = `SELECT o.id AS id, u.first_name, o.user_id, JSON_AGG(JSONB_BUILD_OBJECT('productId', p.id, 'title', p.title, 'description', p.description, 'price', p.price, 'quantity', op.quantity)) AS products, o.status AS status FROM orders AS o LEFT JOIN order_products AS op ON o.id = op.order_id LEFT JOIN products AS p ON op.product_id = p.id LEFT JOIN users AS u ON u.id = o.user_id WHERE o.id = $1 GROUP BY o.id, u.first_name, o.status, o.user_id`
export const UpdateOrderSQL = `UPDATE orders SET user_id=($3), status=($2) WHERE id=($1) RETURNING *`
export const DeleteOrderSQL = `DELETE FROM orders WHERE id=($1) RETURNING *`
